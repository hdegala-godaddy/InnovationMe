{"ast":null,"code":"import _slicedToArray from \"/Users/harshadegala/Code/React/assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails() {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalEmpCount = _useState2[0],\n      setTotalEmpCount = _useState2[1]; // setTimeout(() => {\n  //     setTotalEmpCount(totalEmpCount+1);\n  // }, 100);\n\n\n  console.log(\"Calling Fetch service\");\n  let empID = 1;\n  let empTreeJson = null; //This could actually passed in as an component callback.\n\n  let callBackCallForUpdate = list => {\n    setTotalEmpCount(list.size);\n  };\n\n  let empFetchService = new EmpFetchService(empID, callBackCallForUpdate);\n  useEffect(() => {\n    empFetchService.fetchAndFillEmpDetails(empID).then(employeeListMap => {\n      setTotalEmpCount(employeeListMap.size);\n    });\n  }, [empID]);\n\n  let showTotalJson = () => {\n    empFetchService.getJson();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, totalEmpCount, React.createElement(\"button\", {\n    onClick: () => showTotalJson(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"show showTotalJson\"), React.createElement(\"textarea\", {\n    value: empTreeJson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}\n\nexport default AllEmployeeDetails;","map":{"version":3,"sources":["/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js"],"names":["React","useState","useEffect","EmpFetchService","AllEmployeeDetails","totalEmpCount","setTotalEmpCount","console","log","empID","empTreeJson","callBackCallForUpdate","list","size","empFetchService","fetchAndFillEmpDetails","then","employeeListMap","showTotalJson","getJson"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,kBAAT,GAA6B;AAAA,kBACgBH,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA,MACpBI,aADoB;AAAA,MACLC,gBADK,kBAIzB;AACA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,WAAW,GAAG,IAAlB,CAVyB,CAWzB;;AAEA,MAAIC,qBAAqB,GAAIC,IAAD,IAAU;AAClCN,IAAAA,gBAAgB,CAACM,IAAI,CAACC,IAAN,CAAhB;AACH,GAFD;;AAGA,MAAIC,eAAe,GAAG,IAAIX,eAAJ,CAAoBM,KAApB,EAA2BE,qBAA3B,CAAtB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEZY,IAAAA,eAAe,CAACC,sBAAhB,CAAuCN,KAAvC,EAA8CO,IAA9C,CAAoDC,eAAD,IAAqB;AACrEX,MAAAA,gBAAgB,CAACW,eAAe,CAACJ,IAAjB,CAAhB;AACD,KAFF;AAGH,GALQ,EAKN,CAACJ,KAAD,CALM,CAAT;;AAOA,MAAIS,aAAa,GAAE,MAAM;AACrBJ,IAAAA,eAAe,CAACK,OAAhB;AACH,GAFD;;AAKA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHd,aADG,EAEJ;AAAQ,IAAA,OAAO,EAAE,MAAKa,aAAa,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFI,EAIA;AAAU,IAAA,KAAK,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAAP;AAMH;;AAED,eAAeN,kBAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails(){\n    let [totalEmpCount, setTotalEmpCount ] = useState(0);\n\n    \n    // setTimeout(() => {\n    //     setTotalEmpCount(totalEmpCount+1);\n    // }, 100);\n\n    console.log(\"Calling Fetch service\");\n    let empID = 1;\n    let empTreeJson = null;\n    //This could actually passed in as an component callback.\n\n    let callBackCallForUpdate = (list) => {\n        setTotalEmpCount(list.size);\n    }\n    let empFetchService = new EmpFetchService(empID, callBackCallForUpdate);\n\n    useEffect(() => {\n        \n        empFetchService.fetchAndFillEmpDetails(empID).then((employeeListMap) => {\n           setTotalEmpCount(employeeListMap.size);\n         });\n    }, [empID]);\n    \n    let showTotalJson= () => {\n        empFetchService.getJson();\n    }\n\n\n    return <div>\n       {totalEmpCount}\n       <button onClick={()=> showTotalJson()} >\n           show showTotalJson</button>\n           <textarea value={empTreeJson}></textarea>\n    </div>;\n}\n\nexport default AllEmployeeDetails;"]},"metadata":{},"sourceType":"module"}