{"ast":null,"code":"import _slicedToArray from \"/Users/harshadegala/Code/React/assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails() {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalEmpCount = _useState2[0],\n      setTotalEmpCount = _useState2[1];\n\n  let _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      empTreeJson = _useState4[0],\n      setEmpTreeJson = _useState4[1]; // setTimeout(() => {\n  //     setTotalEmpCount(totalEmpCount+1);\n  // }, 100);\n\n\n  console.log(\"Calling Fetch service\");\n  let empID = 1; //let empTreeJson = null;\n  //This could actually passed in as an component callback.\n\n  let callBackCallForUpdate = list => {\n    setTotalEmpCount(list.size);\n  };\n\n  let empFetchService = null;\n  useEffect(() => {\n    empFetchService = new EmpFetchService(empID, callBackCallForUpdate);\n    empFetchService.fetchAndFillEmpDetails(empID).then(employeeListMap => {\n      setTotalEmpCount(employeeListMap.size);\n    });\n  }, [empID]);\n\n  let showTotalJson = () => {\n    if (empFetchService) setEmpTreeJson(empFetchService.getJson());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, totalEmpCount, React.createElement(\"button\", {\n    onClick: () => showTotalJson(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"show showTotalJson\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    style: {\n      margin: '40px',\n      border: \"2px solid blue\",\n      font: \"15px\"\n    },\n    value: empTreeJson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default AllEmployeeDetails;","map":{"version":3,"sources":["/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js"],"names":["React","useState","useEffect","EmpFetchService","AllEmployeeDetails","totalEmpCount","setTotalEmpCount","empTreeJson","setEmpTreeJson","console","log","empID","callBackCallForUpdate","list","size","empFetchService","fetchAndFillEmpDetails","then","employeeListMap","showTotalJson","getJson","margin","border","font"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,kBAAT,GAA6B;AAAA,kBACgBH,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA,MACpBI,aADoB;AAAA,MACLC,gBADK;;AAAA,mBAEWL,QAAQ,CAAC,IAAD,CAFnB;AAAA;AAAA,MAEpBM,WAFoB;AAAA,MAEPC,cAFO,kBAKzB;AACA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ,CAVyB,CAWzB;AACA;;AAEA,MAAIC,qBAAqB,GAAIC,IAAD,IAAU;AAClCP,IAAAA,gBAAgB,CAACO,IAAI,CAACC,IAAN,CAAhB;AACH,GAFD;;AAGA,MAAIC,eAAe,GAAG,IAAtB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,eAAe,GAAG,IAAIZ,eAAJ,CAAoBQ,KAApB,EAA2BC,qBAA3B,CAAlB;AACAG,IAAAA,eAAe,CAACC,sBAAhB,CAAuCL,KAAvC,EAA8CM,IAA9C,CAAoDC,eAAD,IAAqB;AACrEZ,MAAAA,gBAAgB,CAACY,eAAe,CAACJ,IAAjB,CAAhB;AACD,KAFF;AAGH,GALQ,EAKN,CAACH,KAAD,CALM,CAAT;;AAOA,MAAIQ,aAAa,GAAE,MAAM;AACrB,QAAIJ,eAAJ,EACCP,cAAc,CAACO,eAAe,CAACK,OAAhB,EAAD,CAAd;AACJ,GAHD;;AAMA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHf,aADG,EAEJ;AAAQ,IAAA,OAAO,EAAE,MAAKc,aAAa,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFI,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAU,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAC,MAAT;AAAiBC,MAAAA,MAAM,EAAE,gBAAzB;AAA2CC,MAAAA,IAAI,EAAC;AAAhD,KAAjB;AAA0E,IAAA,KAAK,EAAEhB,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAAP;AAOH;;AAED,eAAeH,kBAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails(){\n    let [totalEmpCount, setTotalEmpCount ] = useState(0);\n    let [empTreeJson, setEmpTreeJson] = useState(null);\n\n    \n    // setTimeout(() => {\n    //     setTotalEmpCount(totalEmpCount+1);\n    // }, 100);\n\n    console.log(\"Calling Fetch service\");\n    let empID = 1;\n    //let empTreeJson = null;\n    //This could actually passed in as an component callback.\n\n    let callBackCallForUpdate = (list) => {\n        setTotalEmpCount(list.size);\n    }\n    let empFetchService = null;\n\n    useEffect(() => {\n        empFetchService = new EmpFetchService(empID, callBackCallForUpdate)\n        empFetchService.fetchAndFillEmpDetails(empID).then((employeeListMap) => {\n           setTotalEmpCount(employeeListMap.size);\n         });\n    }, [empID]);\n    \n    let showTotalJson= () => {\n        if (empFetchService)\n         setEmpTreeJson(empFetchService.getJson());\n    }\n\n\n    return <div>\n       {totalEmpCount}\n       <button onClick={()=> showTotalJson()} >\n           show showTotalJson</button>\n           <br/>\n           <textarea style={{ margin:'40px', border: \"2px solid blue\", font:\"15px\"}} value={empTreeJson}></textarea>\n    </div>;\n}\n\nexport default AllEmployeeDetails;"]},"metadata":{},"sourceType":"module"}