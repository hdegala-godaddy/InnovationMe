{"ast":null,"code":"import _slicedToArray from \"/Users/harshadegala/Code/React/assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js\";\nimport React, { useState } from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails() {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalEmpCount = _useState2[0],\n      setTotalEmpCount = _useState2[1]; // setTimeout(() => {\n  //     setTotalEmpCount(totalEmpCount+1);\n  // }, 100);\n\n\n  console.log(\"Calling Fetch service\");\n  let empFetchService = new EmpFetchService(1);\n  empFetchService.fetchAndFillEmpDetails().then(employeeListMap => {\n    setTotalEmpCount(employeeListMap.size);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, totalEmpCount);\n}\n\nexport default AllEmployeeDetails;","map":{"version":3,"sources":["/Users/harshadegala/Code/React/assignment/src/AllEmployeeDetails.js"],"names":["React","useState","EmpFetchService","AllEmployeeDetails","totalEmpCount","setTotalEmpCount","console","log","empFetchService","fetchAndFillEmpDetails","then","employeeListMap","size"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,kBAAT,GAA6B;AAAA,kBACgBF,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA,MACpBG,aADoB;AAAA,MACLC,gBADK,kBAIzB;AACA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,MAAIC,eAAe,GAAG,IAAIN,eAAJ,CAAoB,CAApB,CAAtB;AACAM,EAAAA,eAAe,CAACC,sBAAhB,GAAyCC,IAAzC,CAA+CC,eAAD,IAAqB;AAC/DN,IAAAA,gBAAgB,CAACM,eAAe,CAACC,IAAjB,CAAhB;AACL,GAFC;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHR,aADG,CAAP;AAGH;;AAED,eAAeD,kBAAf","sourcesContent":["import React,{useState} from \"react\";\nimport EmpFetchService from \"./EmpFetchService\";\n\nfunction AllEmployeeDetails(){\n    let [totalEmpCount, setTotalEmpCount ] = useState(0);\n\n    \n    // setTimeout(() => {\n    //     setTotalEmpCount(totalEmpCount+1);\n    // }, 100);\n\n    console.log(\"Calling Fetch service\");\n    let empFetchService = new EmpFetchService(1);\n    empFetchService.fetchAndFillEmpDetails().then((employeeListMap) => {\n        setTotalEmpCount(employeeListMap.size);\n  });\n\n    return <div>\n       {totalEmpCount}\n    </div>;\n}\n\nexport default AllEmployeeDetails;"]},"metadata":{},"sourceType":"module"}